# Файл docker-compose должен начинаться с тега версии.
# Мы используем "3" так как это - самая свежая версия на момент написания этого кода.

version: "3"

# Следует учитывать, что docker-composes работает с сервисами.
# 1 сервис = 1 контейнер.
# Сервисом может быть клиент, сервер, сервер баз данных...
# Раздел, в котором будут описаны сервисы, начинается с 'services'.

services:

     # Первый сервис (контейнер): server.
    # Назвать его можно так, как нужно разработчику.
    # Понятное название сервиса помогает определить его роль.

    server:

        # Ключевое слово "build" позволяет задать
        # путь к файлу Dockerfile, который нужно использовать для создания образа,
        # который позволит запустить сервис.

        build: .

        # Команда, которую нужно запустить после создания образа.

        command: java -jar /app.jar

        # Если мы хотим обратиться к серверу с нашего компьютера (находясь за пределами контейнера),
        # мы должны организовать перенаправление этого порта на порт компьютера.
        # Сделать это нам поможет ключевое слово 'ports'.
        # При его использовании применяется следующая конструкция: [порт компьютера]:[порт контейнера]
        # В нашем случае нужно использовать порт компьютера 8080 и организовать его связь с портом
        # 8080 контейнера (так как именно на этот порт сервер
        # ожидает поступления запросов).

        ports:
            -   8080:8080


     # Второй сервис (контейнер): БД.
     # Этот сервис назван 'postgres'.
    postgres:
        image: postgres
        ports:
            - 5430:5432
        environment:
            POSTGRES_DB: ${DB_SCHEMA:-API_DB}
            POSTGRES_USER: ${DB_USER:-user}
            POSTGRES_PASSWORD: ${DB_PASS:-pass}
