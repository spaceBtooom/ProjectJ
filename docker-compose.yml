# Файл docker-compose должен начинаться с тега версии.
# Мы используем "3" так как это - самая свежая версия на момент написания этого кода.

version: "3"

# Следует учитывать, что docker-composes работает с сервисами.
# 1 сервис = 1 контейнер.
# Сервисом может быть клиент, сервер, сервер баз данных...
# Раздел, в котором будут описаны сервисы, начинается с 'services'.

services:

     # Первый сервис (контейнер): server.
    # Назвать его можно так, как нужно разработчику.
    # Понятное название сервиса помогает определить его роль.

    server:

        # Ключевое слово "build" позволяет задать
        # путь к файлу Dockerfile, который нужно использовать для создания образа,
        # который позволит запустить сервис.

        build: .

        # Команда, которую нужно запустить после создания образа.

        command: java -jar /app.jar

        # Если мы хотим обратиться к серверу с нашего компьютера (находясь за пределами контейнера),
        # мы должны организовать перенаправление этого порта на порт компьютера.
        # Сделать это нам поможет ключевое слово 'ports'.
        # При его использовании применяется следующая конструкция: [порт компьютера]:[порт контейнера]
        # В нашем случае нужно использовать порт компьютера 8080 и организовать его связь с портом
        # 8080 контейнера (так как именно на этот порт сервер
        # ожидает поступления запросов).

        ports:
            -   '8080:8080'
#        depends_on:
#            -   db
#        environment:
#          - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/api_db
#          - SPRING_DATASOURCE_USERNAME=user
#          - SPRING_DATASOURCE_PASSWORD=pass
#          - SPRING_JPA_HIBERNATE_DDL_AUTO=create-drop
#          - SPRING_JPA_SHOW-SQL=true
#          - SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL=true
#

     # Второй сервис (контейнер): БД.
     # Этот сервис назван 'db'.
#    db:
#        image: postgres:15.0
#        container_name: db
#        ports:
#            - '5432:5432'
#        environment:
#            POSTGRES_DB: api_db
#            POSTGRES_USER: user
#            POSTGRES_PASSWORD: pass
#        volumes:
#          - postgres_db:/var/postgres/lib/data
#
#volumes:
#  postgres_db:
#      driver: local
